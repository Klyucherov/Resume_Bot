import os

import dotenv
import openai
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.types import InputFile
from aiogram.types import ReplyKeyboardRemove

from keyboards import kb, ikb, audio_kb

dotenv.load_dotenv()

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à API-–∫–ª—é—á OpenAI
bot_key = os.getenv('BOT_TOKEN')
open_key = os.getenv('OPEN_API')

openai.api_key = open_key
bot = Bot(token=bot_key)  # —Å–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞, –ø–æ–¥–∫–ª—é—á–∞—è—Å—å –∫ API
dp = Dispatcher(bot=bot)

HELP_COMMAND = """
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<b>/start</b> - <em>–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞</em>
<b>/About</b> - <em>–û–±–æ –º–Ω–µ</em>"""

INFO = """
–ö–ª—é—á–µ—Ä–æ–≤ –ï–≤–≥–µ–Ω–∏–π, 23 –≥–æ–¥–∞

–ú–æ—ë –≥–ª–∞–≤–Ω–æ–µ —É–≤–ª–µ—á–µ–Ω–∏–µ —ç—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–∞ –Ω–µ–≥–æ —è —Ç—Ä–∞—á—É –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.

–° —É—Ç—Ä–∞ —è –∑–∞–Ω–∏–º–∞—é—Å—å —É—á–µ–±–Ω—ã–º–∏ –∏ –ø–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞–º–∏. –ß–∏—Ç–∞—é —Ç–µ–æ—Ä–∏—é, –ø–∏—à—É –∫–æ–¥. –í —Å—Ä–µ–¥–Ω–µ–º —Ç—Ä–∞—á—É –Ω–∞ —ç—Ç–æ  –ø–æ 2-4 —á–∞—Å–∞ –¥–µ–Ω—å.

–ü–æ—Å–ª–µ –æ–±–µ–¥–∞ –∑–∞–Ω–∏–º–∞—é—Å—å —Ä–∞–±–æ—á–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏, —Ç–∞–∫ –∂–µ –ø–∏—à—É –∫–æ–¥, –¥–æ–±–∞–≤–ª—è—é –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞ —Å–∞–π—Ç –∏–ª–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä—é –∫–æ–¥.

–í–µ—á–µ—Ä–æ–º —Å 18.00 –¥–æ 22.00 —è –ø—Ä–µ–ø–æ–¥–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç—è–º 9 - 16 –ª–µ—Ç.
"""

current_photo_index = 0
flag = False

photo_folder = "photo"
photo_files = os.listdir(photo_folder)


async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!')


@dp.message_handler(content_types=[types.ContentType.VOICE])
async def handle_voice_message(message: types.Message):
    audio = await bot.download_file_by_id(message.voice.file_id)

    try:
        response = openai.SpeechToText.create(audio=audio)
        text = response['text']

        if "–î–∞–π –º–Ω–µ —Å—Å—ã–ª–∫—É" in text:
            await message.answer("–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–π GitHub: https://github.com/Klyucherov")
        else:
            await message.answer("–í—ã —Å–∫–∞–∑–∞–ª–∏: " + text)
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ —Ä–µ—á–∏." + str(e))


async def send_current_photo(message: types.Message):
    if 0 <= current_photo_index < len(photo_files):
        photo_path = os.path.join(photo_folder, photo_files[current_photo_index])
        photo_name = os.path.splitext(photo_files[current_photo_index])[0]
        await bot.send_photo(chat_id=message.chat.id,
                             photo=open(photo_path, 'rb'),
                             caption=photo_name,
                             reply_markup=ikb)


@dp.message_handler(Text(equals="–ú–æ–∏ —Ñ–æ—Ç–æ"))
async def show_my_photos(message: types.Message):
    global current_photo_index
    await message.answer(text='–í–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É!',
                         reply_markup=ReplyKeyboardRemove())
    await send_current_photo(message)
    await message.delete()


@dp.message_handler(Text(equals="–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã"))
async def show_answers_menu(message: types.Message):
    await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:',
                         reply_markup=audio_kb)
    await message.delete()


@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    await message.answer(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç! üêù',
                         reply_markup=kb)
    await message.delete()


@dp.message_handler(commands=['help'])
async def cmd_help(message: types.Message):
    await message.answer(text=HELP_COMMAND,
                         parse_mode='HTML')
    await message.delete()


@dp.message_handler(commands=['About'])
async def cmd_help(message: types.Message):
    await message.answer(text=INFO)
    await bot.send_sticker(chat_id=message.chat.id,
                           sticker="CAACAgIAAxkBAAEKGUBk5bZEsDlxEdKvUXHF2p_ftRjwSgACOR8AAuMNwUiX2rsmPHIbxTAE")
    await message.delete()


# –î–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ –ª–∞–π–∫–∞ –∏ –¥–∏–∑–ª–∞–π–∫–∞
@dp.callback_query_handler(Text(equals='like'))
async def callback_like(callback: types.CallbackQuery):
    await callback.answer("–í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!")


@dp.callback_query_handler(Text(equals='dislike'))
async def callback_dislike(callback: types.CallbackQuery):
    await callback.answer("–í–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–±–µ–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@dp.callback_query_handler(Text(equals='main'))
async def callback_main(callback: types.CallbackQuery):
    await callback.message.answer(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!',
                                  reply_markup=kb)
    await callback.message.delete()
    await callback.answer()


@dp.callback_query_handler(Text(equals='next_photo'))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–±–µ–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è "–°–ª–µ–¥—É—é—â–∞—è —Ñ–æ—Ç–∫–∞"
async def callback_next_photo(callback: types.CallbackQuery):
    global current_photo_index
    current_photo_index = (current_photo_index + 1) % len(photo_files)
    photo_path = os.path.join(photo_folder, photo_files[current_photo_index])

    photo_name = os.path.splitext(photo_files[current_photo_index])[0]  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    await callback.message.edit_media(types.InputMedia(media=types.InputFile(photo_path),
                                                       type='photo',
                                                       caption=photo_name),
                                      # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è
                                      reply_markup=ikb)
    await callback.answer()


@dp.callback_query_handler(Text(equals='gpt_explanation'))
async def callback_gpt_explanation(callback: types.CallbackQuery):
    audio_path = "audio/gpt_explanation.ogg"
    await bot.send_voice(callback.message.chat.id, voice=InputFile(audio_path))


@dp.callback_query_handler(Text(equals='sql_nosql_difference'))
async def callback_sql_nosql_difference(callback: types.CallbackQuery):
    audio_path = "audio/sql_nosql_difference.ogg"
    await bot.send_voice(callback.message.chat.id, voice=InputFile(audio_path))


@dp.callback_query_handler(Text(equals='first_love_story'))
async def callback_first_love_story(callback: types.CallbackQuery):
    audio_path = "audio/first_love_story.ogg"
    await bot.send_voice(callback.message.chat.id, voice=InputFile(audio_path))


@dp.message_handler(Text(equals="–î–∞–π –º–Ω–µ —Å—Å—ã–ª–∫—É"))
async def send_github_link(message: types.Message):
    await message.answer("–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–π GitHub: https://github.com/Klyucherov")


if __name__ == "__main__":
    executor.start_polling(dispatcher=dp,
                           skip_updates=True,
                           on_startup=on_startup)
